Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true 
  config.hostmanager.manage_host = true


  # Use the appropriate box that supports ARM architecture
  ubuntu_box = "bento/ubuntu-20.04-arm64" # Ensure this Ubuntu box is ARM compatible

  config.vm.define "kubemaster" do |kubemaster|
    kubemaster.vm.box = ubuntu_box
    kubemaster.vm.network "private_network", ip: "192.168.56.2"
    kubemaster.vm.provider "vmware_desktop" do |vmware|
    kubemaster.vm.synced_folder "/Users/andynze/myapp/vdata", "/vagrant_data", 
      mount_options: ["dmode=755,fmode=755"], create: true
      vmware.memory = 2048
      vmware.cpus = 2
    end
    kubemaster.vm.hostname = "kubemaster"
    kubemaster.vm.provision "shell", path: "kubemaster-init.sh"
  end

  config.vm.define "kubenode1" do |kubenode1|
    kubenode1.vm.box = ubuntu_box
    kubenode1.vm.network "private_network", ip: "192.168.56.3"
    kubenode1.vm.provider "vmware_desktop" do |vmware|
      vmware.memory = 2048
      vmware.cpus = 2
    end
    kubenode1.vm.hostname = "kubenode1"
    kubenode1.vm.provision "shell", path: "kubenode1-init.sh"
  end

  config.vm.define "kubenode2" do |kubenode2|
    kubenode2.vm.box = ubuntu_box
    kubenode2.vm.network "private_network", ip: "192.168.56.4"
    kubenode2.vm.provider "vmware_desktop" do |vmware|
      vmware.memory = 2048
      vmware.cpus = 2
    end
    kubenode2.vm.hostname = "kubenode2"
    kubenode2.vm.provision "shell", path: "kubenode2-init.sh"
  end
end
